---
name: Main

on: [push]

jobs:
  quality_and_tests:
    name: Code quality and tests
    runs-on: ubuntu-20.04
    env:
      DEV: true
      SECRET_KEY: test_secret_key
      DB_USER: budget_api
      DB_PASSWORD: budget_api
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Build image"
        run: docker compose -f docker-compose-tests.yaml up backend -d
      - name: "Perform database migrations"
        run: docker compose -f docker-compose-tests.yaml run backend sh -c "python src/manage.py wait_for_db && python src/manage.py migrate"
      - name: "[Code quality] black"
        run: docker compose -f docker-compose-tests.yaml run backend sh -c "black . --line-length=120 --check"
      - name: "[Code quality] isort"
        run: docker compose -f docker-compose-tests.yaml run backend sh -c "isort . --check-only --profile black"
      - name: "[Code quality] flake8"
        run: docker compose -f docker-compose-tests.yaml run backend sh -c "flake8 ."
      - name: "[Code quality] bandit"
        run: docker compose -f docker-compose-tests.yaml run backend sh -c "bandit -c pyproject.toml -r ."
      - name: "[Code quality] safety"
        run: docker compose -f docker-compose-tests.yaml run backend sh -c "safety check -i 70612"
      - name: "[Tests] pytest"
        run: docker compose -f docker-compose-tests.yaml run backend sh -c "python src/manage.py wait_for_db && pytest"
      - name: "Cleanup"
        if: always()
        run: docker compose rm -s -f -v
